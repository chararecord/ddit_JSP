<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

<!-- 	annotation 기반으로 등록과 의존관계(주입) 설정 -->
	<context:annotation-config />
	<context:component-scan base-package="kr.or.ddit.sample" use-default-filters="false">
		<!-- 필터를 넣을 때는 반드시 include가 위에 -->
<!-- 		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/> -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
		<context:include-filter type="annotation" expression="org.aspectj.weaver.AjAttribute.Aspect"/>
	</context:component-scan>
	
<!-- 	bean 등록 시 사용 가능한 어노테이션 -->
<!-- 	@Component : 범용 유틸리티 bean 등록 (그 외 class에서 사용), 대부분의 어노테이션에서 meta 어노테이션으로 활용 -->
<!-- 	@Repository : Persistence Layer bean 등록 -->
<!-- 	@Service : Business Logic Layer bean 등록 -->
<!-- 	@Controller(*) : Controller Layer bean 등록, HandlerMapping에 의해 수집되는 bean -->

<!-- 	@Configuration : java configuration에서 주로 사용 -->

<!-- 	XXX@ControllerAdvice -->

<!-- 	XXX@RestController : Rest -->
<!-- 	XXX@RestControllerAdvice	 -->

<!-- 	의존성 주입을 위한 어노테이션 -->
<!-- 	@Resource : id나 type 등의 주입 조건을 명시적으로 설정 가능-->
<!-- 	@Autowired : type(class)를 기준으로 주입(조건 설정 불가능), 동일 타입의 bean이 두개 이상 존재하면 예외 발생
					 ** 비추! 대신해서 Inject 사용 -->
	
<!-- 	@Inject(*) : @Autowired와 유사하게 동작하나, 대부분의 범용 프레임워크에서 활용 가능함 -->
<!-- 	@Required :  -->
</beans>
